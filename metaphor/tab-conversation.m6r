Context: Conversation tabs
    Each tab will be named with a conversation name.  This will default to "Conv: ID" where <ID> is a
    based on the date and time at which the conversation started.  The ID format will be:
    "yyyy-mm-dd-hh-mm-ss-ttt", substituting the conversation start date and time (in UTC) for yyyy,
    mm, dd, hh, mm, ss, ttt (year, numeric month, day-of-month, hours, minutes, seconds, and thousandths of
    seconds respectively).

    Each tab will have a close button (typically rendered as an "x" icon) that appears after the conversation
    name.  Clicking this close button will close the tab in the same way as clicking the "Close Conversation"
    menu item.

    The close button will be:

    - Always visible but not highlighted on the currently selected tab.
    - Hidden by default on non-selected tabs, appearing only when the tab is hovered over.
    - Use a transparent background when not hovered
    - Highlighted in red (#ff4444) when the mouse hovers over the close button itself.

    Context: History display
        Each message in the history appears as a distinct "card" that spans the full width of the history view.

        Each card has:

        - A header section containing the sender name ("You", "Assitant Reasoning", "Assistant Response",
        or "System Message"), colour coded to show these in different colours based on the role.
        - A content section.
        - 10px spacing between cards
        - 10px padding within the content area
        - 8px rounded border around each card

        The cards dynamically resize with the window:

        - The width always matches the window width (minus margins and scroll bar)
        - The height adjusts automatically based on the content
        - Text wraps within the card boundaries
        - Code blocks maintain their formatting while wrapping where possible

        Context: Example layout
            Here's an ASCII representation of the layout:

            ```plaintext
            +------------------------------------------+
            | You                                  c s |
            |                                          |
            | This is a user message that wraps        |
            | across multiple lines as needed.         |
            +------------------------------------------+
                            ↕ 10px
            +------------------------------------------+
            | Assistant Response                   c s |
            |                                          |
            | This is an AI response that also wraps   |
            | across multiple lines as needed.         |
            |                                          |
            | +--------------------------------------+ |
            | | Python                           c s | |
            | |  def example():                      | |
            | |    print("Code blocks maintain their | |
            | |          formatting")                | |
            | +--------------------------------------+ |
            |                                          |
            | This is another response that also       |
            | wraps across multiple lines as needed.   |
            +------------------------------------------+
                            ↕ 10px
            +------------------------------------------+
            | System Message                       c s |
            |                                          |
            | This is a system message that wraps      |
            | across multiple lines as needed.         |
            +------------------------------------------+
            ```

            Within the assistant response, or assistant reasoning, any code blocks will be shown
            as sub-blocks within the larger block to make it easy to extract them.

            Each message also has icons, marked here as "c" and "s" that implement "copy" and "save-as".
            These capture the entire contents of the message in Markdown format and either copy them to
            the clipboard, or invoke a save-as dialog to allow the message to be saved as a file.

            Context: Code blocks
                Embedded within the messages can be code blocks.  These have a distinct visual
                style that differentiates them from other parts of the AI response.  Where the
                language is known then their sub-header shows this.  They also have icons, marked
                here as "c" and "s" that implement "copy" and "save-as".  These capture the
                contents of the code block and either copy them to the clipboard, or invoke
                a save-as dialog to allow the contents to be saved as a file.

    Context: Focus message
        Within any conversation the application will track the current "focused" message.  This will
        represent the one that the user is currently focused on.  If the user navigates to the next
        or previous message it will be done relative to this.

        The focus is indicated by having a distinct coloured and thicker border.

    Context: History box navigation
        In the history view, the user should be able to scroll vertically with the up and down
        cursor keys and the page-up, page-down keys.  If a horizontal scroll bar is active then
        the user can also scroll horizontally with the left and right cursor keys.

    Context: Input box behavior
        The input box starts with a single line and expands vertically as content is added.

        The input box supports:
            - Home key: Moves cursor to start of current line
            - End key: Moves cursor to end of current line
            - Ctrl+Home: Moves cursor to start of message
            - Ctrl+End: Moves cursor to end of message
            - Page Up/Down: Scroll by viewport height

    Context: Selection behaviour
        Selection of text is limited to within a single message - it cannot span across multiple
        messages or between the input area and message history.

        When selecting text near the top or bottom of the visible area, the view will
        automatically scroll to follow the selection.

        The scroll speed increases based on how far outside the visible area the cursor is.

        The maximum scroll speed is reached when the cursor is twice the viewport height away.

    Context: Bookmarking messages
        Messages can be bookmarked to allow the user to jump backwards and forwards to bookmarked messages.

        Multiple messages can be bookmarked in a single conversation

        Bookmark navigation rules:
        - Cycles through bookmarked messages in order of appearance
        - Wraps around to the first/last bookmark when reaching the end/beginning
        - Restores the scroll position at the time a bookmark was set so we restore back to the same scroll position.

    Context: Pop-up menu
        If the user clicks the right mouse button in a conversation tab then they will be
        given a pop-up menu.

        Context: Fork conversation
            Selecting this will fork the conversation in the same way as the main menu option

        Context: Separator
            There will be a horizontal Separator

        Context: Toggle bookmark
            Selecting this will toggle the bookmark selection state of the current message

        Context: Next bookmark
            Selecting this move the view to the next bookmark

        Context: Previous bookmark
            Selecting this move the view to the previous bookmark

        Context: Separator
            There will be a horizontal Separator

        Context: Conversation settings
            Selecting this will pop up the conversation settings dialog.
