Context: System tab
    The system supports exactly one system tab.  This can either be hidden or displayed.

    The system tab supports a conversation-like view for command interactions between the user and the system.
    These are similar to command line tools in a conventional shell or command prompt environment.

    By default the user is presented with a command prompt.  They can type new commands which are then
    processed by a command processing subsystem.  While commands are textual, the results of commands may
    result in graphical operations within the software.

    Context: Navigation
        Commands are handled as command lines, and not as edit controls.  Text can be edited, but up and
        down operations trigger operations on the history buffer, not movement of the cursor.

        The command editor supports:
            - Home key or Page Up: Moves cursor to start of current line
            - End key or Page Down: Moves cursor to end of current line
            - Up: Selet the previous item in the command history
            - Down: Select the next item in the command history
            - Tab: Where supported, the tab key will attempt context-aware command line completions,
              cycling between possible options
            - Shift+Tab: Where supported, the shift+tab key combination will attempt context-aware
              command line completions, but cycling between possible options in the reverse order

    Context: History buffer
        The system tab maintains a history of the last 100 commands that were entered, allowing the user to
        navigate and reuse previous commands.

    Context: Commands
        When the user submits a command it is added to the command history and displayed in the systemt tab.
        Each commands is handed to a custom command processors with the results also being displayed in the
        system tab.  Failed commands have a red response header, while successful commands have a green
        response header.

        If a command involves opening a new tab within the application GUI this will be done in a tab
        column adjacent to the system tab, ensuring focus remains with the system tab and that the results
        of the operation remain visible.  If only one column is currently active, this means a new column
        will be opened.  If two columns are displayed then any new tab will open in the other column.  If
        three or more columns are open then a column adjacent to the one containing the system tab will
        be used, prefering the column to the right if this is an option.

        The following commands are available:

        Context: "clear" command
            The clear command clears the system shell history.

        Context: "conversation" command
            The conversation command opens a new conversation.

        Context: "edit" command
            The edit command opens a named file.  If the file does not exist then it will be created first,
            ensuring the correct syntax highlighting is available.

        Context: "help" command
            The help command lists all the available commands.

        Context: "m6rc" command
            The m6rc command takes a named file and compiles it with the m6rc Metaphor compiler.  If the
            file compiles successfully then a new conversation is started using the prompt that has been
            generated by the compiler and this is submitted to the AI.

        Context: "terminal" command
            The terminal command opens a new terminal tab.

        Context: "wiki" command
            The wiki command takes a named file or directory and opens this in a wiki tab view.
