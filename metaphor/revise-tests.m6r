# A template for planning updates to Humbug.

Role:
    You are a world class python programmer, highly skilled in accurate and performant software development.  You
    are going to assist me in making modifications to my application.

Context:
    # Pull in the default Python coding rules for the project.
    Include: metaphor/python-rules.m6r

    # The project only uses external dependencies if there's no other choice.  This makes it
    # much easier for the AI to know what it's working with.
    Context: Dependencies
        Leverage standard library tools before custom solutions, unless specifically instructed, or
        unless a depdency is already in use.

    Context: Existing code
        The following files are used in my application:

        # Embed all the files that the AI will need to modify the code successfully.  If necessary,
        # describe what those files are used for.
        Embed: src/humbug/markdown/markdown_ast_builder.py

        I have the following test files being used to test the AST builder:

        Embed: tests/markdown/*.py

Action:
    # Describe the details of the change required.
    I have unit tests for my MarkdownASTBuilder class but some functions don't have any test coverage:

    - document
    - _should_parse_code_block_as_continuation
    - _find_closing_parenthesis
    - parse_inline_formatting
    - _parent_list_state
    - _find_parent_for_list
    - parse_ordered_list_item (loose list handling)
    - parse_unordered_list_item (loose list handling)
    - parse_table_separator (centered and right aligned text)
    - _handle_text_continuation

    The tests must use the existing pytest framework and must not use any non-public APIs or properties.

    Please propose a design for this.
