Context: Terminal Emulator Implementation
    The terminal emulator support Linux xterm capabilities, i.e. a superset of VT220.

    Context: Implementation Details
        The terminal display is handled by a custom widget.  This is supposed to be pre-allocated to the size
        of the visible terminal.  Also any secondary screen must also be preallocated the same way.

        Context: Multiple displays
            The terminal supports a primary and secondary display.

            Both have indepdendent histories and scrollback.

            The primary dispaly retains its history indefinitely, but the secondard display history is reinitialized
            each time the secondary display is invoked.

        Context: History buffers
            The terminal supports input history buffers.  The history buffer tracks what was previously on screen when
            a scroll-up operation occurs and the current state of the terminal (the current state is at the end of the
            buffer).  As such these are display buffers, not command buffers.  We are implementing a terminal emulator
            and thus have no idea what is a command and what is not (that's up to the application making use of the
            terminal emulator).

            The user is able to use the UI scrollbars to scroll through this history and view previous terminal outputs.

        Context: Terminal input cursor
            The input cursor is where new characters are written to the terminal display.

            The terminal cursor is only ever visible in the active portion of the terminal (the lines at the end) and
            cannot be moved into the history.

        Context: Mouse selection of text
            The mouse may be used to select text in any part of the active or history buffer.  This is done using the Qt
            cursor and allows the user to copy text.

            This leads to a key requirement, that the selection of text in the history and the active area of the
            terminal must be done in the same widget otherwise this regions will be discontinuous.

        Context: Window resizing
            When the window resizes then the terminal emulator must reflow the text and ensure every line of history is
            resized to the new width.

        Context: Pre-allocated "active" display
            The terminal emulator pre-allocates the display buffer for the active terminal.  All terminal character cells
            are pre-allocate and writes to the terminal overwrite them.  As this is a terminal emulator the lines are a
            known fixed width (the width of the terminal) and we do not have to consider any characters beyond this as
            there will never be any characters beyond the end of the pre-allocated line.

            Both the primary and secondary displays use pre-allocation.  The primary display pre-allocation occurs when
            the terminal is started, while the secondary displays are pre-allocated as they are initiated.

        Context: Non-printable characters
            This is a terminal emulator, so while we are using a document structure to represent the contents this is not
            a document.  For example, newline does not result in the cursor moving to the first column.  Instead,
            newline simply moves the cursor down one row, or causes the cursor to remain where it is if the cursor is
            on the last row.

            Non-printable characters do not cause line wraps.
