{
  "source_file": "tests/syntax/fixtures/2025-06-13-003/test.cpp",
  "language": "CPP",
  "tokens": [
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": " * natural.cpp",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": " */",
      "start": 0
    },
    {
      "type": "PREPROCESSOR",
      "value": "#include <cctype>",
      "start": 0
    },
    {
      "type": "PREPROCESSOR",
      "value": "#include <vector>",
      "start": 0
    },
    {
      "type": "PREPROCESSOR",
      "value": "#include \"c8.h\"",
      "start": 0
    },
    {
      "type": "PREPROCESSOR",
      "value": "#include \"digit_array.h\"",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "namespace",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "c8",
      "start": 10
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 13
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 4
    },
    {
      "type": "KEYWORD",
      "value": "char",
      "start": 10
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_lower",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 32
    },
    {
      "type": "STRING",
      "value": "'0'",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 11
    },
    {
      "type": "STRING",
      "value": "'1'",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 16
    },
    {
      "type": "STRING",
      "value": "'2'",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 21
    },
    {
      "type": "STRING",
      "value": "'3'",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 26
    },
    {
      "type": "STRING",
      "value": "'4'",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 31
    },
    {
      "type": "STRING",
      "value": "'5'",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 36
    },
    {
      "type": "STRING",
      "value": "'6'",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 41
    },
    {
      "type": "STRING",
      "value": "'7'",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 46
    },
    {
      "type": "STRING",
      "value": "'8'",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 51
    },
    {
      "type": "STRING",
      "value": "'9'",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 56
    },
    {
      "type": "STRING",
      "value": "'a'",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 61
    },
    {
      "type": "STRING",
      "value": "'b'",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 66
    },
    {
      "type": "STRING",
      "value": "'c'",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 71
    },
    {
      "type": "STRING",
      "value": "'d'",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 76
    },
    {
      "type": "STRING",
      "value": "'e'",
      "start": 78
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 81
    },
    {
      "type": "STRING",
      "value": "'f'",
      "start": 83
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 5
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 4
    },
    {
      "type": "KEYWORD",
      "value": "char",
      "start": 10
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_upper",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 32
    },
    {
      "type": "STRING",
      "value": "'0'",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 11
    },
    {
      "type": "STRING",
      "value": "'1'",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 16
    },
    {
      "type": "STRING",
      "value": "'2'",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 21
    },
    {
      "type": "STRING",
      "value": "'3'",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 26
    },
    {
      "type": "STRING",
      "value": "'4'",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 31
    },
    {
      "type": "STRING",
      "value": "'5'",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 36
    },
    {
      "type": "STRING",
      "value": "'6'",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 41
    },
    {
      "type": "STRING",
      "value": "'7'",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 46
    },
    {
      "type": "STRING",
      "value": "'8'",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 51
    },
    {
      "type": "STRING",
      "value": "'9'",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 56
    },
    {
      "type": "STRING",
      "value": "'A'",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 61
    },
    {
      "type": "STRING",
      "value": "'B'",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 66
    },
    {
      "type": "STRING",
      "value": "'C'",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 71
    },
    {
      "type": "STRING",
      "value": "'D'",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 76
    },
    {
      "type": "STRING",
      "value": "'E'",
      "start": 78
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 81
    },
    {
      "type": "STRING",
      "value": "'F'",
      "start": 83
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 5
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Convert a character to numeric value, checking against a specified base.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "KEYWORD",
      "value": "inline",
      "start": 9
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "convert_char_to_natural_digit",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "char",
      "start": 46
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 54
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 74
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 91
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 12
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "isdigit",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 25
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "!=",
      "start": 21
    },
    {
      "type": "NUMBER",
      "value": "16",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "throw",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "invalid_argument",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 38
    },
    {
      "type": "STRING",
      "value": "\"invalid digit\"",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "isxdigit",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "throw",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "invalid_argument",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 38
    },
    {
      "type": "STRING",
      "value": "\"invalid digit\"",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 14
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 27
    },
    {
      "type": "KEYWORD",
      "value": "char",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "tolower",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 14
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 27
    },
    {
      "type": "KEYWORD",
      "value": "char",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 38
    },
    {
      "type": "STRING",
      "value": "'a'",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 43
    },
    {
      "type": "STRING",
      "value": "'0'",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 49
    },
    {
      "type": "NUMBER",
      "value": "10",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "c_digit",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 57
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "c",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 61
    },
    {
      "type": "STRING",
      "value": "'0'",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 67
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 17
    },
    {
      "type": "NUMBER",
      "value": "8",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 23
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "c_digit",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ">=",
      "start": 24
    },
    {
      "type": "NUMBER",
      "value": "8",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "throw",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "invalid_argument",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 38
    },
    {
      "type": "STRING",
      "value": "\"invalid digit\"",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "c_digit",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Reserve a number of digits in this natural number.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "inline",
      "start": 4
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 23
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 57
    },
    {
      "type": "KEYWORD",
      "value": "void",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 65
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * If our digit array is already large enough (which is very likely) then",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * we don't need to do anything.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "C8_LIKELY",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 21
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ">=",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 51
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Allocate a new digit array and update book-keeping info.  The naked new",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * here isn't ideal, but we really don't want to have to zero the array and",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * there's no way to do that with std::make_unique<>.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 21
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "large_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 27
    },
    {
      "type": "IDENTIFIER",
      "value": "unique_ptr",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 56
    },
    {
      "type": "KEYWORD",
      "value": "new",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 74
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 86
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 87
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "large_digits_",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 31
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "get",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Expand the number of digits in this natural number.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "inline",
      "start": 4
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 23
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "expand",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 56
    },
    {
      "type": "KEYWORD",
      "value": "void",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * If our digit array is already large enough (which is very likely) then",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * we don't need to do anything.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "C8_LIKELY",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 21
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ">=",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 51
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Replace the old digit array with the new one.  The naked new here",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * isn't ideal, but we really don't want to have to zero the array and",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * there's no way to do that with std::make_unique<>.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "unique_ptr",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 49
    },
    {
      "type": "KEYWORD",
      "value": "new",
      "start": 50
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 67
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 78
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 79
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 80
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "d_ptr",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 22
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "get",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 28
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_copy",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "d_ptr",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 52
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 21
    },
    {
      "type": "IDENTIFIER",
      "value": "new_digits",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "large_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 27
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "move",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "d_ptr",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Copy the contents of a natural number into this one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "copy_digits",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "void",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 56
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 21
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 68
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 23
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "C8_UNLIKELY",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 39
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 17
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 30
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_copy",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 35
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 57
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Steal the contents of a natural number into this one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "steal_digits",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 43
    },
    {
      "type": "KEYWORD",
      "value": "void",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "large_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 27
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "move",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 35
    },
    {
      "type": "ELEMENT",
      "value": "large_digits_",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 50
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Are we currently using the default small buffer, or do we have one allocated?",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "C8_UNLIKELY",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "large_digits_",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 37
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "get",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 46
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 12
    },
    {
      "type": "COMMENT",
      "value": "             * We're using an allocated buffer so just move it.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "             */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 23
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 13
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 25
    },
    {
      "type": "ELEMENT",
      "value": "small_digits_",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 28
    },
    {
      "type": "ELEMENT",
      "value": "digits_size_",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 13
    },
    {
      "type": "ELEMENT",
      "value": "digits_size_",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 27
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 37
    },
    {
      "type": "ELEMENT",
      "value": "small_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 53
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 76
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "else",
      "start": 10
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 15
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 12
    },
    {
      "type": "COMMENT",
      "value": "             * We're using the default buffer so copy the contents.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "             */",
      "start": 0
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_copy",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 45
    },
    {
      "type": "ELEMENT",
      "value": "small_digits_",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 62
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 74
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 75
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 25
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 49
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 23
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 9
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 10
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Construct a natural number from an unsigned long long integer.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "natural",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 21
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 41
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 21
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 68
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "this_digits",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 25
    },
    {
      "type": "KEYWORD",
      "value": "do",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "m",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 57
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 60
    },
    {
      "type": "IDENTIFIER",
      "value": "this_digits",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "++",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 60
    },
    {
      "type": "IDENTIFIER",
      "value": "m",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 64
    },
    {
      "type": "PREPROCESSOR",
      "value": "#if defined(C8_DIGIT_8_BITS) || defined(C8_DIGIT_16_BITS) || defined(C8_DIGIT_32_BITS)",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ">>=",
      "start": 14
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 36
    },
    {
      "type": "PREPROCESSOR",
      "value": "#else",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 14
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 17
    },
    {
      "type": "PREPROCESSOR",
      "value": "#endif",
      "start": 0
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "while",
      "start": 10
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Construct a natural number from a string.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     *",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     * The string representation can have the usual C++-like hex, octal, or decimal",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     * representations.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "natural",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 21
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "string",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_size_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 21
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 68
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "small_digits_",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_sz",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 28
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "size",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "C8_UNLIKELY",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "v_sz",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 29
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 36
    },
    {
      "type": "KEYWORD",
      "value": "throw",
      "start": 12
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "invalid_argument",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "STRING",
      "value": "\"zero size string\"",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Is our first character a '0'?  If it is then we may have an octal or hex number.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "idx",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 24
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 27
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 27
    },
    {
      "type": "NUMBER",
      "value": "10",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 13
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 17
    },
    {
      "type": "STRING",
      "value": "'0'",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "idx",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 16
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "NUMBER",
      "value": "8",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "v_sz",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 21
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 26
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "c2",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 27
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "c2",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 24
    },
    {
      "type": "STRING",
      "value": "'x'",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "||",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "c2",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 39
    },
    {
      "type": "STRING",
      "value": "'X'",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "idx",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 24
    },
    {
      "type": "NUMBER",
      "value": "2",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 27
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 25
    },
    {
      "type": "NUMBER",
      "value": "16",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "expand",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 21
    },
    {
      "type": "IDENTIFIER",
      "value": "v_sz",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 27
    },
    {
      "type": "IDENTIFIER",
      "value": "idx",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 34
    },
    {
      "type": "NUMBER",
      "value": "4",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 39
    },
    {
      "type": "NUMBER",
      "value": "31",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 45
    },
    {
      "type": "NUMBER",
      "value": "32",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 50
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 17
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 37
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 40
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 34
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 28
    },
    {
      "type": "NUMBER",
      "value": "3",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 34
    },
    {
      "type": "NUMBER",
      "value": "2",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 28
    },
    {
      "type": "NUMBER",
      "value": "7",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 34
    },
    {
      "type": "NUMBER",
      "value": "4",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 28
    },
    {
      "type": "NUMBER",
      "value": "15",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 17
    },
    {
      "type": "IDENTIFIER",
      "value": "char_count",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 32
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 46
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "v_sz",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 65
    },
    {
      "type": "IDENTIFIER",
      "value": "idx",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 70
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 71
    },
    {
      "type": "KEYWORD",
      "value": "for",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 12
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 13
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 28
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "char_count",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 47
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "+=",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 69
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "acc",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 30
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "convert_char_to_natural_digit",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 63
    },
    {
      "type": "IDENTIFIER",
      "value": "idx",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": "++",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 69
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 76
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 77
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "char_count",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "char_count",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "KEYWORD",
      "value": "for",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 17
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 26
    },
    {
      "type": "IDENTIFIER",
      "value": "j",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 32
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "j",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "chars_per_digit",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 56
    },
    {
      "type": "IDENTIFIER",
      "value": "j",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": "++",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 63
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "c_digit",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 38
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "convert_char_to_natural_digit",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 70
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "idx",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": "++",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 78
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 80
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "IDENTIFIER",
      "value": "acc",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 20
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "acc",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 54
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 62
    },
    {
      "type": "IDENTIFIER",
      "value": "c_digit",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 72
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 25
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 52
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 63
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 69
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 70
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_multiply",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 49
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 66
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 74
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 76
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 79
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 80
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 91
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 93
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 94
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 102
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 104
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 105
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 106
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "acc",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 21
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_add",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 35
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 48
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 60
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 65
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 73
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 78
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 79
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 90
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 92
    },
    {
      "type": "IDENTIFIER",
      "value": "acc",
      "start": 93
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 96
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 98
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 99
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 100
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 14
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 19
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "move",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Copy constructor.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "natural",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 21
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 39
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "copy_digits",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Move constructor.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "natural",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "&&",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 32
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 43
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "steal_digits",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Return true if this number is equal to another one, false if it's not.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 63
    },
    {
      "type": "KEYWORD",
      "value": "bool",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 71
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_compare_eq",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 72
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Return true if this number is not equal to another one, false if it's equal.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "!=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 63
    },
    {
      "type": "KEYWORD",
      "value": "bool",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 71
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_compare_ne",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 72
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Return true if this number is greater than another one, false if it's not.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 47
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 62
    },
    {
      "type": "KEYWORD",
      "value": "bool",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 70
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_compare_gt",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 72
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Return true if this number is greater than, or equal to, another one, false if it's not.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ">=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 63
    },
    {
      "type": "KEYWORD",
      "value": "bool",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 71
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_compare_ge",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 72
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Return true if this number is less than another one, false if it's not.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 47
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 62
    },
    {
      "type": "KEYWORD",
      "value": "bool",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 70
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_compare_lt",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 72
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Return true if this number is less than, or equal to, another one, false if it's not.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "<=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 63
    },
    {
      "type": "KEYWORD",
      "value": "bool",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 71
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_compare_le",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 72
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Copy assignment operator.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 47
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 60
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Are we assigning to ourself?  If we are then we don't need to do anything.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "C8_UNLIKELY",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 37
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 19
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Delete the old contents of this natural number and copy the original's digits.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "copy_digits",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 22
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Move assignment operator.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "&&",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 40
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Are we assigning to ourself?  If we are then we don't have to do anything.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "C8_UNLIKELY",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 37
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 19
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Delete the old contents of this natural number and steal the original's digits.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "steal_digits",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Return the number of bits required to represent this natural number.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "size_bits",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "noexcept",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 60
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_size_bits",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 57
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Add another natural number to this one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * We need to reserve some space for our result.  Our result can only be",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * one digit larger than the largest number we have as an operand.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "max_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": "?",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ":",
      "start": 85
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 87
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 102
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "max_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 35
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_add",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 27
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 40
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 78
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 80
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 81
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 82
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 89
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 91
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 103
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 104
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Add another natural number to this one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "+=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 61
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * We need to reserve some space for our result.  Our result can only be",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * one digit larger than the largest number we have as an operand.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "max_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": "?",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ":",
      "start": 85
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 87
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 102
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "expand",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 14
    },
    {
      "type": "IDENTIFIER",
      "value": "max_num_digits",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 30
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 34
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_add",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 73
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 74
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 81
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 83
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 95
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 96
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Subtract another natural number from this one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 36
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_subtract",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 32
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 40
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 45
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 66
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 83
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 86
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 87
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 94
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 96
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 97
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 98
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 109
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 110
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Subtract another natural number from this one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "-=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 61
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_subtract",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 74
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 82
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 85
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 86
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 97
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 98
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Left shift this natural number by a bit count.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "<<",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 56
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 67
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "%",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 51
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 55
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_left_shift",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 34
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 47
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 68
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 70
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 85
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 87
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 99
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 101
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 111
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 112
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Left shift this natural number by a bit count.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "<<=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 31
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 40
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "%",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "expand",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 14
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 46
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 50
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_left_shift",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 60
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 77
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 79
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 91
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 93
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 103
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 104
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Right shift this natural number by a bit count.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ">>",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 56
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 67
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "%",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 36
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_right_shift",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 35
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 48
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 60
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 86
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 88
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 100
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 102
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 112
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 113
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Right shift this natural number by a bit count.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ">>=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 31
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 40
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "count",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "%",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_right_shift",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 78
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_digits",
      "start": 80
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 92
    },
    {
      "type": "IDENTIFIER",
      "value": "shift_bits",
      "start": 94
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 104
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 105
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Multiply this natural number with another one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "res_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 67
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "res_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_multiply",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 32
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 40
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 45
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 66
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 83
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 86
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 87
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 94
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 96
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 108
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 109
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Multiply this natural number with another one.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "*=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "res_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 67
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "expand",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 14
    },
    {
      "type": "IDENTIFIER",
      "value": "res_num_digits",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 30
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_multiply",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 58
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 75
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 78
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 79
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 86
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 88
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 100
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 101
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Divide this natural number by another one, returning the quotient and remainder.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "divide_modulus",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 32
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 47
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 63
    },
    {
      "type": "IDENTIFIER",
      "value": "pair",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 70
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 77
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 79
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 86
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 88
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "pair",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 17
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 9
    },
    {
      "type": "ELEMENT",
      "value": "first",
      "start": 10
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 15
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 40
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 9
    },
    {
      "type": "ELEMENT",
      "value": "second",
      "start": 10
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 38
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "first",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 42
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 50
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 52
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 53
    },
    {
      "type": "ELEMENT",
      "value": "first",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 59
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 74
    },
    {
      "type": "ELEMENT",
      "value": "second",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 81
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 82
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 89
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 91
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 92
    },
    {
      "type": "ELEMENT",
      "value": "second",
      "start": 93
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 99
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 100
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 111
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 62
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "p",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Divide this natural number by another one, returning the quotient.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_digits",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 40
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 43
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 73
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_digits",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 91
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_num_digits",
      "start": 93
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 113
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 62
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Divide this natural number by another one, returning the quotient.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "/=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_digits",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 40
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 55
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_digits",
      "start": 57
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 73
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder_num_digits",
      "start": 75
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 95
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 55
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 57
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 58
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 66
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 80
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 81
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Divide this natural number by another one, returning the remainder.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "%",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 29
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 64
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_digits",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 54
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 17
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "reserve",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_digits",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 50
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_num_digits",
      "start": 52
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 82
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 83
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 90
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder",
      "start": 92
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 101
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 102
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 113
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 62
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 85
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "remainder",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Divide this natural number by another one, returning the remainder.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "%=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 48
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_digits",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 54
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_digits",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 50
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_num_digits",
      "start": 52
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 80
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 82
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 93
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 62
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 73
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 74
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 86
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Find the greatest common divisor of this and another natural number.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "gcd",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 21
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 38
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 46
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * If either this number or v are zero then our GCD is just the non-zero value.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 14
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 19
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 36
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 26
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * We're going to use Euclid's algorithm.  We need to know which is the larger",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * of our two numbers and we'll call that num1, while the smaller will be num2.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_compare_lt",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 42
    },
    {
      "type": "IDENTIFIER",
      "value": "this_num_digits",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 62
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 70
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 84
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 87
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 19
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "else",
      "start": 10
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 19
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * We never actually use the quotient - this is just somewhere to dump the output.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_digits",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 37
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 42
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "-",
      "start": 55
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 57
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 61
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 74
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 76
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 78
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Euler's algorithm is essentially to take the modulus of num1 and num2 and check",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * if the result is zero.  If it is zero then num2 is the GCD.  If it's not zero then",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * try again, but replacing num1 with num2 and num2 with the modulus from the previous",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * attempt.  We iterate thus:",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         *",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * r0 = num1 % num2",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * r1 = num2 % r0",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * r2 = r0 % r1",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * r3 = r1 % r2",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * ...",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         *",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * We can implement a very efficient version of this with in-place modulus operations",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * if we observe that the dividend in each case is never used and can thus be overwritten.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * When we do this we unroll into an iterating pair of operations:",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         *",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * num1 = num1 % num2",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * num2 = num2 % num1",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "while",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 14
    },
    {
      "type": "KEYWORD",
      "value": "true",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 21
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_digits",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 54
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_num_digits",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 75
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 81
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 82
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 89
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 91
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 95
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 96
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 107
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 43
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 57
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 75
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 76
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 83
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 89
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 90
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 101
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 102
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 21
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 35
    },
    {
      "type": "KEYWORD",
      "value": "break",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_digits",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 54
    },
    {
      "type": "IDENTIFIER",
      "value": "quotient_num_digits",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 75
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 81
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 82
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 89
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 91
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 95
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 96
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 107
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 43
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 57
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 69
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 71
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 75
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 76
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 83
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 85
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 89
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 90
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 101
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 102
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "!",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 21
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 20
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "steal_digits",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "num1",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "KEYWORD",
      "value": "break",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "num2",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * Convert this natural number to an unsigned long long.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 16
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "to_unsigned_long_long",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 40
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 51
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 60
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 70
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Will this number fit in an unsigned long long?  If not then throw an",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * exception.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "size_bits",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 26
    },
    {
      "type": "NUMBER",
      "value": "8",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 37
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 38
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 51
    },
    {
      "type": "KEYWORD",
      "value": "throw",
      "start": 12
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "overflow_error",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Convert the value to our result format.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 17
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 31
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "sz",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "num_digits_",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 36
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "sz",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 17
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 24
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 25
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 34
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 54
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 69
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "sz",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 23
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 24
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 33
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 44
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 53
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 67
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "this_digits",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 50
    },
    {
      "type": "KEYWORD",
      "value": "for",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 12
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 13
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 28
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "sz",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": "++",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 46
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "|=",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 31
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 32
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 41
    },
    {
      "type": "KEYWORD",
      "value": "long",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 51
    },
    {
      "type": "IDENTIFIER",
      "value": "this_digits",
      "start": 52
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 63
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": "<<",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 71
    },
    {
      "type": "IDENTIFIER",
      "value": "i",
      "start": 72
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 74
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 76
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 94
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 95
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 96
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 4
    },
    {
      "type": "COMMENT",
      "value": "     * << operator to print a natural.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "     */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 4
    },
    {
      "type": "KEYWORD",
      "value": "operator",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": "<<",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "ostream",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 41
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "natural",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 57
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 58
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "->",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 67
    },
    {
      "type": "IDENTIFIER",
      "value": "ostream",
      "start": 69
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 79
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 48
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 25
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "<<",
      "start": 19
    },
    {
      "type": "STRING",
      "value": "'0'",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 25
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 27
    },
    {
      "type": "NUMBER",
      "value": "10",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 31
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "flags",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 27
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "flags",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 34
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "flags",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "ios_base",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "hex",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 40
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "NUMBER",
      "value": "16",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "else",
      "start": 10
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "flags",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 25
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "ios_base",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 40
    },
    {
      "type": "IDENTIFIER",
      "value": "oct",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 47
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 17
    },
    {
      "type": "NUMBER",
      "value": "8",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "const",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "char",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 27
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_lower",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 41
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "flags",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "ios_base",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "uppercase",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 44
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 46
    },
    {
      "type": "IDENTIFIER",
      "value": "digits",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "digits_upper",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "flags",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "ios_base",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "showbase",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 43
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 45
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "!=",
      "start": 21
    },
    {
      "type": "NUMBER",
      "value": "10",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "<<",
      "start": 23
    },
    {
      "type": "STRING",
      "value": "'0'",
      "start": 26
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 29
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 25
    },
    {
      "type": "NUMBER",
      "value": "16",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "<<",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "flags",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 43
    },
    {
      "type": "IDENTIFIER",
      "value": "ios_base",
      "start": 45
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 53
    },
    {
      "type": "IDENTIFIER",
      "value": "uppercase",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": "?",
      "start": 66
    },
    {
      "type": "STRING",
      "value": "'X'",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ":",
      "start": 72
    },
    {
      "type": "STRING",
      "value": "'x'",
      "start": 74
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 77
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 78
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 35
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 38
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Allocate space for a result buffer.  We want this to be fast, so we go old-school",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * and use a C-style string (yes this isn't nice, but we're very careful).  We assume",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * a worst case of octal, so each 3 bits requires one result character.  We also want",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * a NUL terminator.  We also give ourselves one extra digit to handle any partial",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * digits, or the zero digit case.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "res_sz",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 27
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "v_num_digits",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit_bits",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 66
    },
    {
      "type": "NUMBER",
      "value": "3",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 69
    },
    {
      "type": "OPERATOR",
      "value": "+",
      "start": 71
    },
    {
      "type": "NUMBER",
      "value": "2",
      "start": 73
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 74
    },
    {
      "type": "KEYWORD",
      "value": "char",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "res_sz",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 24
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 11
    },
    {
      "type": "OPERATOR",
      "value": "--",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "res_sz",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "STRING",
      "value": "'\\0'",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 28
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_digits",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 34
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 47
    },
    {
      "type": "IDENTIFIER",
      "value": "std",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "::",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "size_t",
      "start": 13
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_num_digits",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 34
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * We always have at least one digit, so compute that now.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_digits",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_num_digits",
      "start": 47
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 63
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 77
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_num_digits",
      "start": 79
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 97
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 36
    },
    {
      "type": "ELEMENT",
      "value": "digits_",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 44
    },
    {
      "type": "IDENTIFIER",
      "value": "v",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 47
    },
    {
      "type": "ELEMENT",
      "value": "num_digits_",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 61
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 62
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 66
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 69
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 70
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 8
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 17
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 23
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 26
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_num_digits",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 30
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 32
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 14
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 27
    },
    {
      "type": "KEYWORD",
      "value": "unsigned",
      "start": 28
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 55
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 56
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 11
    },
    {
      "type": "OPERATOR",
      "value": "--",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "res_sz",
      "start": 14
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "digits",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 31
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 33
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 33
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 37
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 11
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 34
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 37
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 21
    },
    {
      "type": "KEYWORD",
      "value": "static_cast",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "<",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 50
    },
    {
      "type": "OPERATOR",
      "value": "*",
      "start": 59
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 66
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Now compute any other characters.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         *",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * We try work in blocks of 2 characters at a time because this results in far",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         * fewer arbitrary precision divides.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "while",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 14
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_num_digits",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 31
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 26
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 29
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "digit_array_divide_modulus",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_digits",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_num_digits",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 67
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 81
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_num_digits",
      "start": 83
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 101
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_digits",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 49
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_num_digits",
      "start": 51
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 67
    },
    {
      "type": "IDENTIFIER",
      "value": "base_div",
      "start": 68
    },
    {
      "type": "OPERATOR",
      "value": ",",
      "start": 76
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 78
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 79
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 80
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "KEYWORD",
      "value": "sizeof",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "natural_digit",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": ">",
      "start": 38
    },
    {
      "type": "NUMBER",
      "value": "1",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 43
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_num_digits",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 36
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": "&&",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 46
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 60
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 63
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 64
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 65
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 67
    },
    {
      "type": "KEYWORD",
      "value": "break",
      "start": 20
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 23
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 25
    },
    {
      "type": "OPERATOR",
      "value": "%",
      "start": 39
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 45
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "/",
      "start": 46
    },
    {
      "type": "IDENTIFIER",
      "value": "base",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 52
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "--",
      "start": 20
    },
    {
      "type": "IDENTIFIER",
      "value": "res_sz",
      "start": 22
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 30
    },
    {
      "type": "IDENTIFIER",
      "value": "digits",
      "start": 32
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 38
    },
    {
      "type": "IDENTIFIER",
      "value": "d",
      "start": 39
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 40
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 41
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "KEYWORD",
      "value": "if",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "rem_num_digits",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 32
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 36
    },
    {
      "type": "OPERATOR",
      "value": "&&",
      "start": 38
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 41
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 42
    },
    {
      "type": "OPERATOR",
      "value": "==",
      "start": 56
    },
    {
      "type": "NUMBER",
      "value": "0",
      "start": 59
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 60
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 61
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 63
    },
    {
      "type": "KEYWORD",
      "value": "break",
      "start": 16
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 12
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 12
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "--",
      "start": 16
    },
    {
      "type": "IDENTIFIER",
      "value": "res_sz",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 24
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 26
    },
    {
      "type": "IDENTIFIER",
      "value": "digits",
      "start": 28
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 34
    },
    {
      "type": "IDENTIFIER",
      "value": "modulus_digit",
      "start": 35
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 48
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 49
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "/*",
      "start": 8
    },
    {
      "type": "COMMENT",
      "value": "         * Output the digits we accumulated.",
      "start": 0
    },
    {
      "type": "COMMENT",
      "value": "         */",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "<<",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": "&",
      "start": 18
    },
    {
      "type": "IDENTIFIER",
      "value": "res",
      "start": 19
    },
    {
      "type": "OPERATOR",
      "value": "[",
      "start": 22
    },
    {
      "type": "IDENTIFIER",
      "value": "res_sz",
      "start": 23
    },
    {
      "type": "OPERATOR",
      "value": "]",
      "start": 29
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 30
    },
    {
      "type": "KEYWORD",
      "value": "return",
      "start": 8
    },
    {
      "type": "IDENTIFIER",
      "value": "outstr",
      "start": 15
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 21
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 0
    },
    {
      "type": "KEYWORD",
      "value": "auto",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "x",
      "start": 5
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 7
    },
    {
      "type": "STRING",
      "value": "L\"fred\"",
      "start": 9
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 16
    },
    {
      "type": "KEYWORD",
      "value": "class",
      "start": 0
    },
    {
      "type": "IDENTIFIER",
      "value": "foo",
      "start": 6
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 10
    },
    {
      "type": "KEYWORD",
      "value": "int",
      "start": 4
    },
    {
      "type": "IDENTIFIER",
      "value": "x",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 9
    },
    {
      "type": "FUNCTION_OR_METHOD",
      "value": "foo",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": "(",
      "start": 7
    },
    {
      "type": "OPERATOR",
      "value": ")",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": "{",
      "start": 10
    },
    {
      "type": "KEYWORD",
      "value": "this",
      "start": 8
    },
    {
      "type": "OPERATOR",
      "value": ".",
      "start": 12
    },
    {
      "type": "ELEMENT",
      "value": "x",
      "start": 13
    },
    {
      "type": "OPERATOR",
      "value": "=",
      "start": 15
    },
    {
      "type": "NUMBER",
      "value": "3",
      "start": 17
    },
    {
      "type": "OPERATOR",
      "value": ";",
      "start": 18
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 4
    },
    {
      "type": "OPERATOR",
      "value": "}",
      "start": 0
    }
  ],
  "parser_state": {
    "parsing_continuation": false,
    "continuation_state": 0,
    "lexer_state": {
      "in_block_comment": false
    },
    "in_element": false
  }
}